---
- name: Copy image file # noqa no-relative-path
  when:
    - (_platform.name_prefix + _platform.name) not in _libvirt_info.keys()
  ansible.builtin.copy:
    src: "{{ _platform.image_file }}"
    dest: "/var/lib/libvirt/images/{{ _platform.name_prefix }}{{ _platform.name }}.qcow2"
    remote_src: true

- name: Create VM
  when:
    - (_platform.name_prefix + _platform.name) not in _libvirt_info.keys()
  community.libvirt.virt:
    name: "{{ _platform.name_prefix }}{{ _platform.name }}"
    command: define
    xml: |
      <domain type="kvm">
        <name>{{ _platform.name_prefix }}{{ _platform.name }}</name>
        <memory>2097152</memory>
        <vcpu>2</vcpu>
        <os>
          <type arch="x86_64">hvm</type>
          <boot dev="hd"/>
        </os>
        <features>
          <acpi/>
          <apic/>
          <pae/>
        </features>
        <clock offset="utc"/>
        <on_poweroff>destroy</on_poweroff>
        <on_reboot>restart</on_reboot>
        <on_crash>restart</on_crash>
        <devices>
          <disk type="file" device="disk">
            <driver name="qemu" type="qcow2"/>
            <source file="/var/lib/libvirt/images/{{ _platform.name_prefix }}{{ _platform.name }}.qcow2"/>
            <target dev="vda" bus="virtio"/>
          </disk>
          <controller type="ide" index="0"> </controller>
          <interface type="network">
            <source dev="eth0" network="default"/>
            <model type="virtio"/>
          </interface>
          <serial type="pty"/>
          <console type="pty"/>
          <graphics type="vnc" autoport="yes"/>
        </devices>
      </domain>

- name: Start VM
  community.libvirt.virt:
    name: "{{ _platform.name_prefix }}{{ _platform.name }}"
    state: running

- name: Wait for VM to be available
  citrix.adc.citrix_adc_nitro_info:
    nsip: "{{ _platform.ip }}"
    nitro_user: nsroot
    nitro_pass: molecule
    nitro_protocol: http
    endpoint: sslparameter
  register: _result
  until: _result is not failed
  retries: 30
  delay: 10
